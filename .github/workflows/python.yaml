on:
  workflow_call:
    inputs:
      pythonVersion:
        required: false
        type: string
        default: "3.12"
      ignoreErrors:
        required: false
        type: boolean
        default: false
        description: whether or not to ignore errors
      setupCommand:
        required: false
        type: string
        default: ""
        description: a CLI command to setup the environment prior to running unit-tests
      testsCommand:
        required: false
        type: string
        default: ""
        description: the CLI command to run the unit-tests
    secrets:
      CODECOV_TOKEN:
        required: true
env:
  CHECK_NAME: Python checks

jobs:
  python:
    name: Unit tests
    runs-on: ubuntu-latest
    permissions:
      contents: read # Required: allow read access to the content for analysis.
      pull-requests: read # Optional: allow read access to pull request. Use with `only-new-issues` option.
      checks: write # Optional: allow write access to checks to allow the action to annotate code in the PR.
      statuses: write # needed for setting the status of the PR

    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Set status pending
        if: github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api --method POST -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/statuses/${{ github.event.pull_request.head.sha }} \
            -f "state=pending" -f "description=Python checks are running" \
            -f "context=${{ env.CHECK_NAME }}"

      - name: Checkout reusable-workflows repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          repository: dnlopes/github-workflows
          path: actions

      - name: Install tools
        uses: ./actions/.github/actions/install-common-tools
        with:
          pythonVersion: ${{ inputs.pythonVersion }}

      - name: Run setup command
        if: ${{ inputs.setupCommand != '' }}
        run: ${{ inputs.setupCommand }}

      - name: Run tests
        if: ${{ inputs.testsCommand != '' }}
        run: ${{ inputs.testsCommand }}

      - uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5
        name: Upload coverage to Codecov
        with:
          fail_ci_if_error: true
          verbose: true
        env:
          CODECOV_TOKEN: "${{ secrets.CODECOV_TOKEN }}"

      - uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1
        name: Upload test results to Codecov
        with:
          fail_ci_if_error: true
          verbose: true
          flags: python${{ inputs.pythonVersion }}
        env:
          CODECOV_TOKEN: "${{ secrets.CODECOV_TOKEN }}"

      - name: Set status success
        if: ${{ (success() || inputs.IgnoreErrors == true) && (github.event_name == 'pull_request' || github.event_name == 'pull_request_target') }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api --method POST -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/statuses/${{ github.event.pull_request.head.sha }} \
            -f "state=success" -f "description=Python checks were successful" \
            -f "context=${{ env.CHECK_NAME }}"

      - name: Set status failure
        if: ${{ (failure() && inputs.IgnoreErrors == false) && (github.event_name == 'pull_request' || github.event_name == 'pull_request_target') }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api --method POST -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/statuses/${{ github.event.pull_request.head.sha }} \
            -f "state=failure" -f "description=Python checks failed validations!" \
            -f "context=${{ env.CHECK_NAME }}"
